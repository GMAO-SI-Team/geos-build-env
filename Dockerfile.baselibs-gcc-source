# MPI and its dependencies
ARG MPI_IMAGE=gmao/mpi-openmpi-gcc-source:4.0.2
FROM ${MPI_IMAGE}

# Get baselibs version at runtime
ARG version
ENV name_version ESMA-Baselibs-${version}
ENV config gfortran_9.2.0-openmpi_4.0.2

# Python
#COPY --from=continuumio/anaconda:latest /opt/conda /opt/conda
#ENV PATH /opt/conda/bin:$PATH

ENV rootloc /baselibs/${version}
ENV baselibs_src ${rootloc}/${name_version}

ENV LANGUAGE en_US.UTF-8
ENV LC_ALL   en_US.UTF-8
ENV LANG     en_US.UTF-8
ENV LC_TYPE  en_US.UTF-8

COPY ./${name_version} ${baselibs_src}

RUN yum install -y https://centos7.iuscommunity.org/ius-release.rpm && \
    yum erase -y git && \
    yum install -y git222-all byacc bison flex expat-devel texinfo epel-release \
                   file automake autoconf libtool which \
                   cmake3 && \
    ln -s /usr/bin/cmake3 /usr/bin/cmake && ln -s /usr/bin/ccmake3 /usr/bin/ccmake && \
    \cd ${baselibs_src} && \
    make -j8 install ESMF_COMM=openmpi CONFIG_SETUP=${config} 2>&1 |tee log.build && \
    make verify && \
    mv log.* ${rootloc} && \
    cd / && \rm -rf ${baselibs_src}

    #grep -lr "mpirun -n" | xargs sed -i 's/mpirun\ -n/mpirun\ --allow-run-as-root\ -n/g' && \
    #grep -lr "mpiexec -n" | xargs sed -i 's/mpiexec\ -n/mpiexec\ --allow-run-as-root\ -n/g' && \
    #make -j8 check ESMF_COMM=openmpi 2>&1 |tee log.check && \
 
ENV BASEDIR ${rootloc}/x86_64-unknown-linux-gnu/${config}

CMD echo "BASEDIR: ${BASEDIR}"

# NOTE: You need an untarred ESMA-Baselibs-x.y.z directory where you run
#       the docker build command. Also, it needs to have been cloned like:
#       git clone -b v6.0.4 --recursive -j 6 git@github.com:GEOS-ESM/ESMA-Baselibs.git ESMA-Baselibs-6.0.4

# Build command
# > docker build --build-arg version=x.y.z -f Dockerfile.baselibs-gcc-source -t gmao/esma-baselibs-gcc-source:<version> .
