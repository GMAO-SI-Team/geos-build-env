# MPI and its dependencies

ARG osversion
ARG compilername
ARG compilerversion
ARG mpiname
ARG mpiversion
ARG MPI_IMAGE=gmao/${osversion}-${mpiname}:${mpiversion}-${compilername}_${compilerversion}
FROM ${MPI_IMAGE}

ARG compilerversion
ARG compilername
ARG mpiversion
ARG mpiname
ARG baselibversion
ARG esmfversion

# Get baselibs baselibversion at runtime
ENV name_version=ESMA-Baselibs
ENV config=${compilername}_${compilerversion}-${mpiname}_${mpiversion}

ENV rootloc=/baselibs/${baselibversion}
ENV baselibs_src=${rootloc}/${name_version}

RUN git clone -b ${baselibversion} -j 8 --recurse-submodules https://github.com/GEOS-ESM/ESMA-Baselibs.git ${baselibs_src} && \
    \cd ${baselibs_src} && \
    git submodule status && \
    if [ ! "x${esmfversion}" = "x" ]; then echo "Moving to ESMF ${esmfversion}" && cd esmf && git checkout ${esmfversion} && cd .. && git submodule status; fi && \
    make -j8 install ESMF_COMM=${mpiname} ESMF_PYTHON=/usr/bin/python3 BUILD=ESSENTIALS prefix=${rootloc}/${config}/Linux 2>&1 |tee log.build && \
    make install ESMF_COMM=${mpiname} ESMF_PYTHON=/usr/bin/python3 ALLDIRS=nccmp prefix=${rootloc}/${config}/Linux 2>&1 |tee log.nccmp.build && \
    make verify ESMF_COMM=${mpiname} && \
    mv log.* ${rootloc} && \
    cd / && \
    rm -rf ${baselibs_src}

ENV BASEDIR=${rootloc}/${config}
ENV PATH=${BASEDIR}/Linux/bin:${PATH}
ENV UDUNITS2_XML_PATH=${BASEDIR}/Linux/share/udunits/udunits2.xml

# Build command
# > docker build --build-arg baselibversion=<baselibversion> --build-arg osversion=<osversion> --build-arg mpiversion=<mpiversion> --build-arg compilerversion=<compilerversion> -f Dockerfile.baselib -t gmao/<osversion>-baselibs:<baselibversion>-${mpiname}_<mpiversion>-${compilername}_<compilerversion> .
#
#   where (for example):
#     <baselibversion> is "6.0.16"
#     <osversion> is "opensuse15" or "ubuntu20"
#     <compilername> is "intel" or "gcc"
#     <compilerversion> is "10.2.0"
#     <mpiversion> is "4.0.5"
